stages:
    - test
    - build
    - image

variables:
    CARGO_HOME: "$CI_PROJECT_DIR/.cargo"

    REDIS_DSN: redis://redis:6379/
    SQLX_OFFLINE: "true"

# Run tests on current stable Rust version
test:latest: &base_test
    image: rust:1.54-slim-buster
    stage: test
    services:
        - redis
    cache:
        key: debug-stable
        paths:
            - .cargo/
            - target/
        policy: pull-push
    before_script:
        - apt-get update -y
        - apt-get install -y pkg-config libssl-dev
        - export RELEASE=$CI_COMMIT_SHA
    script:
        - cargo build --verbose
        - cargo test --verbose
        - cargo test --verbose -- --ignored

# Same as above, but nightly Rust
test:nightly:
    <<: *base_test
    cache:
        key: debug-nightly
        paths:
            - .cargo/
            - target/
        policy: pull-push
    image: rustlang/rust:nightly-slim
    allow_failure: true

build:
    <<: *base_test
    stage: build
    cache:
        key: release-stable
        paths:
            - .cargo/
            - target/
        policy: pull-push
    needs: ["test:latest"]
    services: []
    artifacts:
        expire_in: 1 day
        paths:
            - ./foxbot/foxbot
            - ./foxbot-background-worker/foxbot-background-worker
    script:
        - cargo build --verbose --release
        - mv ./target/release/foxbot ./foxbot/foxbot
        - mv ./target/release/foxbot-background-worker ./foxbot-background-worker/foxbot-background-worker
        - mv ./target/release/foxbot-discord ./foxbot-discord/foxbot-discord

docker:
    stage: image
    image:
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    before_script:
        - mkdir -p /kaniko/.docker
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    needs: ["build"]
    script:
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/foxbot/Dockerfile --destination $CI_REGISTRY_IMAGE/bot:$CI_COMMIT_SHA --destination $CI_REGISTRY_IMAGE/bot:latest --cache=true
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/foxbot-background-worker/Dockerfile --destination $CI_REGISTRY_IMAGE/background-worker:$CI_COMMIT_SHA --destination $CI_REGISTRY_IMAGE/background-worker:latest --cache=true
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/foxbot-discord/Dockerfile --destination $CI_REGISTRY_IMAGE/discord:$CI_COMMIT_SHA --destination $CI_REGISTRY_IMAGE/discord:latest --cache=true
